import { useEffect } from 'react'
import { Link } from 'react-router'

function NodeJs() {
	useEffect(() => {
			document.title = 'Node JS курс | IT-COURSE';
	}, []);
	return (
		<>
			<h1 style={{ textAlign: 'center' }}>NODE JS</h1>
			<div className='home-of-course'>
				<h3>Уроки Node JS</h3>
				<img
					src='https://itproger.com/img/courses/x1510913647.jpg.pagespeed.ic.coVEpTgi3J.webp'
					alt=''
					className='preview-img'
				/>
				<p>
					Node JS нельзя назвать отдельным языком программирования. Это скорее
					отдельная платформа, что построена на базе движка V8 и языка C++.
					<br /> <br />
					И тут чтобы понять всю суть этой технологии важно понять как вообще
					работает язык JavaScript. Классический язык JavaScript выполняется в
					браузере при помощи специального движка. Практические все веб браузеры
					для обработки языка JavaScript выпустили свой собственный движок.
					<br /> <br />
					У Firefox такой движок называется SpiderMonkey, у Internet Explorer
					был движок Chakra, а у Google Chrome движок V8. Этот движок является
					просто технологией, что понимает синтаксис языка JavaScript и
					транслирует его из кода в некие пользовательские действия.
					<br /> <br />
					Так вот, в 2009 году некий Райан Даль, основатель платформы Node JS,
					придумал интересную идею. Он взял сам по себе движок V8, вытянул его
					из браузера и получил отдельную платформу, что теперь позволяет
					запускать язык JavaScript из любого места.
					<br /> <br />
					То есть если до 2009 года вы могли работать только внутри браузера,
					ведь там был соотвествующий движок, то теперь вы можете этот движок
					интегрировать куда угодно и тем самым вы получаете возможно
					использования языка JavaScript за пределами браузера для любых своих
					целей.
				</p>
				<h2>Возможности Node JS</h2>
				<p>
					Получив такую технологию энтузиасты со всего мира создали большое
					множество всевозможных библиотек для разработки проектов разных
					жанров. Теперь вы можете на основе языка JavaScript и платформы Node
					JS строить приложения из разных сфер. Вы можете создать программу под
					компьютер при помощи библиотеки Electron, написать серверную часть веб
					сайта на основе Express JS, создать пользовательский API, разработать
					мобильное приложение при помощи React Native, создать искусственный
					интеллект и выполнить множество других действий.
					<br /> <br />
					Логика проста. Поскольку JS теперь не только браузерный язык
					программирования, то на его основе вы можете делать все что только
					захотите.
					<br /> <br />
					Ниже список нескольких популярных веб-сайтов на Node JS:
					<br />
				</p>
				<ul className='ul'>
					<li>Всемирная платежная система - PayPal;</li>
					<li>Один из самых популярных поисковиков мира - Yahoo;</li>
					<li>Онлайн версия газеты Wall Street Journal;</li>
					<li>
						Сеть для сбора лучших фотографий и видео из соц. сетей - Spotify.
					</li>
				</ul>
				<h2>Пакетный менеджер</h2>
				<p>
					Node JS также имеет свой пакетный менеджер, что называется{' '}
					<code>npm</code>. Благодаря нему вы можете подключать сторонние
					библиотеки, запускать локальный сервер и делать ещё множество
					интересных вещей.
				</p>
				<h3>План курса</h3>
				<p>
					В ходе курса «Node JS уроки для начинающих с нуля» мы научимся
					работать с Node, рассмотрим его синтаксис, создадим несколько простых
					веб приложений, а также разберемся с фреймворком <b>Express</b>,
					который был разработан специально под Node JS и является отличным
					дополнением.
					<br /> <br />
					Перед началом просмотра курса стоит изучить HTML и JavaScript. HTML
					потребуется для написания разметки сайта, а JS понадобиться для
					написания функций. Все дополнительные курсы вы можете посмотреть на
					нашем сайте.
				</p>
				<main>
					<h2 style={{ textAlign: 'center' }}>Уроки:</h2>
					<ul className='one'>
						<li>
							<Link to='nodejslessons'>Перейти к курсу</Link>
						</li>
					</ul>
				</main>
			</div>
		</>
	)
}

export default NodeJs
