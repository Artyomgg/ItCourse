import { useState } from 'react'
import '../css/books.css'
import { informaticsBooks } from '../Data/informatikBooks.js'
import PDFReader from '../components/PDFReader'

function Books(props) {
	const [selectedGrade, setSelectedGrade] = useState('all')
	const [selectedPdf, setSelectedPdf] = useState(null)

	const filteredBooks =
		selectedGrade === 'all'
			? informaticsBooks
			: informaticsBooks.filter(book => book.class.includes(selectedGrade))

	const grades = ['all', '6 –∫–ª–∞—Å—Å', '7 –∫–ª–∞—Å—Å', '8 –∫–ª–∞—Å—Å', '7-9 –∫–ª–∞—Å—Å']

	const handlePdfOpen = (src, title) => {
		setSelectedPdf({ src, title })
		document.body.style.overflow = 'hidden'
	}

	const handleClosePdf = () => {
		setSelectedPdf(null)
		document.body.style.overflow = 'auto'
	}

	return (
		<div className='books-page'>
			{/* –ì–µ—Ä–æ–π —Å–µ–∫—Ü–∏—è */}
			<section className='books-hero'>
				<div className='conteiner'>
					<h1>üìö –£—á–µ–±–Ω–∏–∫–∏ –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ</h1>
					<p>
						–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –≤–µ—Ä—Å–∏–∏ —É—á–µ–±–Ω–∏–∫–æ–≤ –¥–ª—è 6-8 –∫–ª–∞—Å—Å–æ–≤ –≤ —Å–≤–æ–±–æ–¥–Ω–æ–º –¥–æ—Å—Ç—É–ø–µ
					</p>
				</div>
			</section>

			{/* –°–µ–∫—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ */}
			<section className='books-filter-section'>
				<div className='conteiner'>
					<h3 className='filter-title'>–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å:</h3>
					<div className='filter-grid'>
						{grades.map(grade => (
							<button
								key={grade}
								className={`filter-btn ${
									selectedGrade === grade ? 'active' : ''
								}`}
								onClick={() => setSelectedGrade(grade)}
							>
								{grade === 'all' ? '–í—Å–µ –∫–ª–∞—Å—Å—ã' : grade}
							</button>
						))}
					</div>
				</div>
			</section>

			{/* –°–µ—Ç–∫–∞ —É—á–µ–±–Ω–∏–∫–æ–≤ */}
			<section className='books-grid-section'>
				<div className='conteiner'>
					<h2 className='books-grid-title'>–î–æ—Å—Ç—É–ø–Ω—ã–µ —É—á–µ–±–Ω–∏–∫–∏</h2>
					<p className='books-grid-subtitle'>
						–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —É—á–µ–±–Ω–∏–∫ –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–≥–æ —á—Ç–µ–Ω–∏—è
					</p>

					<div className='books-grid'>
						{filteredBooks.map(book => (
							<div
								key={book.id}
								className='book-card'
								onClick={() => handlePdfOpen(book.src, book.title)}
							>
								<div className='book-card-header'>
									<img
										className='book-cover'
										src={`/img/books/class${book.class.charAt(0)}.jpg`}
										alt={book.title}
										onError={e => {
											e.target.src = '/img/books/default-book.jpg'
										}}
									/>
									<div className='book-info'>
										<h3 className='book-title'>{book.title}</h3>
										<span className='book-class'>{book.class}</span>
									</div>
								</div>

								<p className='book-description'>
									–û—Ç–∫—Ä—ã—Ç—å –≤ —É–¥–æ–±–Ω–æ–π —á–∏—Ç–∞–ª–∫–µ —Å –ø–µ—Ä–µ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü
								</p>

								<div className='book-action'>
									<button className='open-book-btn'>üìñ –ß–∏—Ç–∞—Ç—å</button>
								</div>
							</div>
						))}
					</div>

					{/* –°–æ–æ–±—â–µ–Ω–∏–µ –µ—Å–ª–∏ –Ω–µ—Ç –∫–Ω–∏–≥ */}
					{filteredBooks.length === 0 && (
						<div className='no-books'>
							<div className='no-books-icon'>üìö</div>
							<h3>–£—á–µ–±–Ω–∏–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
							<p>–î–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É—á–µ–±–Ω–∏–∫–æ–≤</p>
						</div>
					)}
				</div>
			</section>

			{/* –ö–∞—Å—Ç–æ–º–Ω–∞—è PDF —á–∏—Ç–∞–ª–∫–∞ */}
			{selectedPdf && (
				<PDFReader
					pdfUrl={`/${selectedPdf.src}`}
					onClose={handleClosePdf}
					title={selectedPdf.title}
				/>
			)}
		</div>
	)
}

export default Books
