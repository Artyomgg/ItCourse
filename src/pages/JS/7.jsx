import React from 'react'
import { Link } from 'react-router'

function Seven() {
	return (
		<>
			<div className='conteiner'>
				<Link to='/courses/js'>
					<div className='before'>
						<i className='bx bx-right-arrow-alt'></i>
					</div>
				</Link>
				<h1 style={{ textAlign: 'center' }}>
					Массивы данных. Одномерные и многомерные массивы
				</h1>
				<p>
					За урок мы научимся работать с массивами данных в языке JavaScript.
					При помощи массивов можно хранить большие объемы информации в одном
					единственном месте. Мы изучим одномерные и многомерные массивы данных.
				</p>
				<div className='block-video'>
					<h2>Видео урок</h2>
					<iframe
						width='560'
						height='315'
						src='https://www.youtube.com/embed/9zVAHOiQYBo?si=uG-L0_kxZV_GHgld'
						title='YouTube video player'
						frameBorder='0'
						allow='accelerometer; 
      			autoplay; 
      			clipboard-write; 
      			encrypted-media; 
      			gyroscope; 
      			picture-in-picture; 
      			web-share'
						referrerPolicy='strict-origin-when-cross-origin'
						allowFullScreen
					></iframe>
				</div>
				<p>
					Массивы позволяют хранить большой объем информации в одном месте. В
					языке JavaScript можно найти несколько основных типов массивов.
				</p>
				<h2>Одномерный массив</h2>
				<p>
					Одномерный массив состоит из нескольких элементов, объединенных под
					одним именем. Чтобы создать массив необходимо создать переменную и
					присвоить ей значение <code>new Array()</code>. Внутри вы можете через
					запятую записывать различные значения, которые и будут элементами
					массива. <br />
					<br />
					В массивах отсчет начинается с 0, поэтому первый элемент по индексу
					будет равен 0, второй - 1 и так далее. <br />
					<br />
					Примеры создания массива:
				</p>
				<div className='block-code'>
					<img src='/public/img/course/js-img/Screenshot_11.png' alt='' />
				</div>
				<p>
					Работать с элементами массива можно точно как с переменными. Мы можем
					их выводить или же устанавливать для них новые значения.
					<br />
					<br />
					Для массивов существует несколько дополнительных функций, которые ещё
					будут изучены в ходе курса. Сейчас был изучен лишь метод
					<code>length</code>, который позволяет получить длину всего массива.
					<br />
					<br />
					Пример метода:
				</p>
				<div className='block-code'>
					<img src='/public/img/course/js-img/Screenshot_12.png' alt='' />
				</div>
				<p>
					Сперва массивы могут показаться бесполезными, но на самом деле это не
					так. В дальнейшем вы сможете понять всю важность массивов.
				</p>
				<h2>Многомерные массивы</h2>
				<p>
					Многомерный массив - это массив, в котором каждый элемент является
					другим массивом. На практике очень редко используются массивы с более
					чем третим уровнем вложенности. То есть массивы, в которых все
					элементы являются другими массивами и в котором все элементы также
					другие массивы встречаются очень и очень редко на практике. <br />{' '}
					<br />
					Мы не будем изучать подобные массивы, так как принцип их построения
					точно такой же как при работе с двумерными массивами.
					<br /> <br />
					Для создания двумерных массивов необходимо использовать двойные
					квадратные скобки после типа данных. Выглядит такой массив как
					матрица, а записывается следующим образом:
				</p>
				<div className='block-code'>
					<img src='/public/img/course/js-img/Screenshot_13.png' alt='' />
				</div>
				<p>
					Мы видим, что элементы первого массива являются другими массивами.
					Чтобы выбрать какой-либо объект используйте ту же структуру что и для
					одномерных массивов, вот только теперь указывайте индекс как первого
					массива, так и второго:
				</p>
				<div className='block-code'>
					<img src='/public/img/course/js-img/Screenshot_14.png' alt='' />
				</div>
			</div>
		</>
	)
}

export default Seven
