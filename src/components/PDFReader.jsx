import React, { useCallback, useState } from 'react'
import { Document, Page, pdfjs } from 'react-pdf'
import 'react-pdf/dist/Page/AnnotationLayer.css'
import 'react-pdf/dist/Page/TextLayer.css'

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ worker –¥–ª—è PDF.js
pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`

function PDFReader({ pdfUrl, onClose, title }) {
	const [numPages, setNumPages] = useState(null)
	const [pageNumber, setPageNumber] = useState(1)
	const [scale, setScale] = useState(1.2)

	function onDocumentLoadSuccess({ numPages }) {
		setNumPages(numPages)
	}

	const goToPrevPage = () => {
		setPageNumber(prev => Math.max(prev - 1, 1))
	}

	const goToNextPage = () => {
		setPageNumber(prev => Math.min(prev + 1, numPages))
	}

	const zoomIn = () => {
		setScale(prev => Math.min(prev + 0.2, 3))
	}

	const zoomOut = () => {
		setScale(prev => Math.max(prev - 0.2, 0.5))
	}

	const resetZoom = () => {
		setScale(1.2)
	}

	// –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ ESC
	const handleKeyDown = useCallback(
		e => {
			if (e.key === 'Escape') {
				onClose()
			} else if (e.key === 'ArrowLeft') {
				goToPrevPage()
			} else if (e.key === 'ArrowRight') {
				goToNextPage()
			}
		},
		[onClose]
	)

	React.useEffect(() => {
		document.addEventListener('keydown', handleKeyDown)
		return () => document.removeEventListener('keydown', handleKeyDown)
	}, [handleKeyDown])

	return (
		<div className='pdf-reader-overlay'>
			<div className='pdf-reader-container'>
				{/* Header */}
				<div className='pdf-reader-header'>
					<div className='pdf-reader-title'>
						<h2>{title}</h2>
						<span className='page-info'>
							–°—Ç—Ä–∞–Ω–∏—Ü–∞ {pageNumber} –∏–∑ {numPages || '--'}
						</span>
					</div>

					<div className='pdf-reader-controls'>
						<button
							className='control-btn zoom-out'
							onClick={zoomOut}
							title='–£–º–µ–Ω—å—à–∏—Ç—å'
						>
							üîç‚àí
						</button>
						<button
							className='control-btn zoom-reset'
							onClick={resetZoom}
							title='–°–±—Ä–æ—Å–∏—Ç—å –º–∞—Å—à—Ç–∞–±'
						>
							{Math.round(scale * 100)}%
						</button>
						<button
							className='control-btn zoom-in'
							onClick={zoomIn}
							title='–£–≤–µ–ª–∏—á–∏—Ç—å'
						>
							üîç+
						</button>

						<button
							className='control-btn download-btn'
							onClick={() => window.open(pdfUrl, '_blank')}
							title='–°–∫–∞—á–∞—Ç—å PDF'
						>
							üì•
						</button>

						<button
							className='control-btn close-btn'
							onClick={onClose}
							title='–ó–∞–∫—Ä—ã—Ç—å (ESC)'
						>
							‚úï
						</button>
					</div>
				</div>

				{/* Navigation */}
				<div className='pdf-navigation'>
					<button
						className='nav-btn prev-btn'
						onClick={goToPrevPage}
						disabled={pageNumber <= 1}
					>
						‚Üê –ù–∞–∑–∞–¥
					</button>

					<div className='page-input-container'>
						<input
							type='number'
							min='1'
							max={numPages}
							value={pageNumber}
							onChange={e => {
								const newPage = parseInt(e.target.value)
								if (newPage >= 1 && newPage <= numPages) {
									setPageNumber(newPage)
								}
							}}
							className='page-input'
						/>
						<span> / {numPages || '--'}</span>
					</div>

					<button
						className='nav-btn next-btn'
						onClick={goToNextPage}
						disabled={pageNumber >= numPages}
					>
						–í–ø–µ—Ä—ë–¥ ‚Üí
					</button>
				</div>

				{/* PDF Content */}
				<div className='pdf-content-wrapper'>
					<div className='pdf-page-container'>
						<Document
							file={pdfUrl}
							onLoadSuccess={onDocumentLoadSuccess}
							loading={
								<div className='pdf-loading'>
									<div className='loading-spinner'></div>
									<p>–ó–∞–≥—Ä—É–∂–∞–µ–º —É—á–µ–±–Ω–∏–∫...</p>
								</div>
							}
							error={
								<div className='pdf-error'>
									<div className='error-icon'>‚ùå</div>
									<h3>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ PDF</h3>
									<p>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —É—á–µ–±–Ω–∏–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</p>
									<button onClick={onClose} className='retry-btn'>
										–ó–∞–∫—Ä—ã—Ç—å
									</button>
								</div>
							}
						>
							<Page
								pageNumber={pageNumber}
								scale={scale}
								renderTextLayer={true}
								renderAnnotationLayer={true}
								loading={
									<div className='page-loading'>–ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É...</div>
								}
							/>
						</Document>
					</div>
				</div>

				{/* Footer */}
				<div className='pdf-reader-footer'>
					<div className='footer-hints'>
						<span>üîÑ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–ª–µ—Å–æ –º—ã—à–∏ –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏</span>
						<span>‚¨ÖÔ∏è ‚û°Ô∏è –°—Ç—Ä–µ–ª–∫–∏ –¥–ª—è –ø–µ—Ä–µ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏—è</span>
						<span>ESC –¥–ª—è –≤—ã—Ö–æ–¥–∞</span>
					</div>
				</div>
			</div>
		</div>
	)
}

export default PDFReader
