import React from 'react'
import { Link, useNavigate } from 'react-router'
import ReturnToTheNineMay from './ReturnToTheNineMay'

const storageKey = 'correctAnswers'
// –û–±—â–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –≤—Å–µ—Ö –∑–∞–¥–∞–Ω–∏–π
function Quest({ questionText, correctAnswer, questId }) {
	const [answer, setAnswer] = React.useState('')
	const navigate = useNavigate()

	const handleInputChange = e => {
		setAnswer(e.target.value.toLowerCase())
	}

	const handleSubmit = e => {
		e.preventDefault()

		if (answer === correctAnswer) {
			const currentAnswers = JSON.parse(localStorage.getItem(storageKey)) || []

			if (!currentAnswers.includes(questId)) {
				const updatedAnswers = [...currentAnswers, questId]
				localStorage.setItem(storageKey, JSON.stringify(updatedAnswers))
				alert('–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –û—Ç–≤–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω.')

				// –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ
				if (questId <= 9) {
					// –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ
					setTimeout(() => {
						navigate(`/9may/${questId + 1}`)
					}, 1500) // –ó–∞–¥–µ—Ä–∂–∫–∞ 1.5 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º
				}
			} else {
				alert('–í—ã —É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—á–∞–ª–∏ –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å!')
			}

			setAnswer('')
		} else {
			alert('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!')
		}
	}

	return (
		<form onSubmit={handleSubmit}>
			<p style={containerStyle}>
				{questionText}
				<input
					type='text'
					value={answer}
					onChange={handleInputChange}
					style={inputStyle}
				/>
				<button type='submit' style={buttonStyle}>
					–ü—Ä–æ–≤–µ—Ä–∏—Ç—å
				</button>
			</p>
		</form>
	)
}

// –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Event –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π
export function Event() {
	const [completedExercises, setCompletedExercises] = React.useState([])
	const [collectedTanks, setCollectedTanks] = React.useState([])

	React.useEffect(() => {
		// –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è
		const exercises = JSON.parse(localStorage.getItem('correctAnswers')) || []
		setCompletedExercises(exercises)

		// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–µ —Ç–∞–Ω–∫–∏
		const tanks = JSON.parse(localStorage.getItem('collectedTanks')) || []
		setCollectedTanks(tanks)

		const handleStorageChange = () => {
			const updatedExercises =
				JSON.parse(localStorage.getItem('correctAnswers')) || []
			setCompletedExercises(updatedExercises)

			const updatedTanks =
				JSON.parse(localStorage.getItem('collectedTanks')) || []
			setCollectedTanks(updatedTanks)
		}

		window.addEventListener('storage', handleStorageChange)
		return () => window.removeEventListener('storage', handleStorageChange)
	}, [])

	const exercises = [
		{ id: 1, path: '/9may/1', name: '1 –ó–∞–¥–∞–Ω–∏–µ' },
		{ id: 2, path: '/9may/2', name: '2 –ó–∞–¥–∞–Ω–∏–µ' },
		{ id: 3, path: '/9may/3', name: '3 –ó–∞–¥–∞–Ω–∏–µ' },
		{ id: 4, path: '/9may/4', name: '4 –ó–∞–¥–∞–Ω–∏–µ' },
		{ id: 5, path: '/9may/5', name: '5 –ó–∞–¥–∞–Ω–∏–µ' },
		{ id: 6, path: '/9may/6', name: '6 –ó–∞–¥–∞–Ω–∏–µ' },
		{ id: 7, path: '/9may/7', name: '7 –ó–∞–¥–∞–Ω–∏–µ' },
		{ id: 8, path: '/9may/8', name: '8 –ó–∞–¥–∞–Ω–∏–µ' },
		{ id: 9, path: '/9may/9', name: '9 –ó–∞–¥–∞–Ω–∏–µ' },
		{ id: 10, path: '/9may/10', name: '10 –ó–∞–¥–∞–Ω–∏–µ' },
	]

	return (
		<div className='exercises-grid'>
			{exercises.map(ex => {
				// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ
				const isAvailable =
					ex.id === 1 ||
					completedExercises.includes(ex.id - 1) ||
					completedExercises.includes(ex.id) ||
					// –î–ª—è 10 –∑–∞–¥–∞–Ω–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–±—Ä–∞–Ω—ã –ª–∏ –≤—Å–µ —Ç–∞–Ω–∫–∏
					(ex.id === 10 && collectedTanks.length === 10)

				// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –ª–∏ –∑–∞–¥–∞–Ω–∏–µ
				const isCompleted =
					completedExercises.includes(ex.id) ||
					// 10 –∑–∞–¥–∞–Ω–∏–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–º, –µ—Å–ª–∏ —Å–æ–±—Ä–∞–Ω—ã –≤—Å–µ —Ç–∞–Ω–∫–∏
					(ex.id === 10 && collectedTanks.length === 10)

				return (
					<Link
						key={ex.id}
						to={ex.path}
						className={`exercise-link ${isAvailable ? '' : 'disabled'}`}
					>
						<div className={`btn${ex.id}`}>
							{ex.name}
							{isCompleted && ' ‚úì'}
						</div>
					</Link>
				)
			})}
		</div>
	)
}

// –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è disabled –∑–∞–¥–∞–Ω–∏–π
const styles = `
  .exercises-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    gap: 10px;
    padding: 20px;
  }
  
  .exercise-link.disabled {
    pointer-events: none;
    opacity: 0.5;
  }
  
  .exercise-link div {
    transition: all 0.3s ease;
  }
  
  .exercise-link:hover div {
    transform: scale(1.05);
  }
`

// –í—Å—Ç–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –≤ head
const styleElement = document.createElement('style')
styleElement.innerHTML = styles
document.head.appendChild(styleElement)

// –°—Ç–∏–ª–∏ –≤—ã–Ω–µ—Å–µ–Ω—ã –æ—Ç–¥–µ–ª—å–Ω–æ –¥–ª—è –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const containerStyle = {
	background: 'white',
	border: '2px solid black',
	borderRadius: '15px',
	padding: '1rem',
	width: '90%',
	margin: '0 auto',
	marginTop: '1.5rem',
}

const inputStyle = {
	border: '1px solid #ccc',
	padding: '0.3rem',
}

const buttonStyle = {
	marginLeft: '0.5rem',
	padding: '0.3rem 0.8rem',
	background: '#4CAF50',
	color: 'white',
	border: 'none',
	borderRadius: '4px',
	cursor: 'pointer',
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∑–∞–¥–∞–Ω–∏–π
export function OneNineMay() {
	return (
		<>
			<ReturnToTheNineMay />
			<Quest
				questId={1}
				correctAnswer='–≥–µ—Ä–æ–π'
				questionText={`–û–Ω —Å–∞–º—ã–π —Å–º–µ–ª—ã–π, –°–∞–º—ã–π –ª–æ–≤–∫–∏–π, –ë–µ—Å—Å—Ç—Ä–∞—à–Ω—ã–π, –£–º–Ω—ã–π, –≤–æ–ª–µ–≤–æ–π. –û–Ω –¥–µ–ª–æ
        –¥–µ–ª–∞–µ—Ç –±–æ–ª—å—à–æ–µ, –í–µ–¥–µ—Ç –ª—é–¥–µ–π –æ–Ω –∑–∞ —Å–æ–±–æ–π, –ê —Å–∞–º –±–µ–∂–∏—Ç –≤–ø–µ—Ä–µ–¥, –ì–¥–µ –ø—É–ª–∏.
        –ù–µ –±–µ—Ä–µ–∂—ë—Ç —Å–µ–±—è, –ø–æ—Ä–æ–π. –ï–≥–æ –≤—ã –∏–º—è –ø–æ–¥—Å–∫–∞–∂–∏—Ç–µ, –ê –ª—é–¥–∏ –≥–æ–≤–æ—Ä—è—Ç: `}
			/>
		</>
	)
}

export function TwoNineMay() {
	return (
		<>
			<ReturnToTheNineMay></ReturnToTheNineMay>
			<Quest
				questId={2}
				correctAnswer='—Å–æ–ª–¥–∞—Ç—ã'
				questionText='–ö—Ç–æ –∑–Ω–∞–µ—Ç –∑–∞–ø–æ–≤–µ–¥—å —Å–≤–æ—é ¬´–¢—Ä—É–¥–Ω–æ –≤ —É—á–µ–Ω–∏–∏, –õ–µ–≥–∫–æ –≤ –±–æ—é¬ª? '
			/>
		</>
	)
}

export function ThreeNineMay() {
	return (
		<>
			<ReturnToTheNineMay></ReturnToTheNineMay>
			<Quest
				questId={3}
				correctAnswer='–≥—Ä–∞–Ω–∞—Ç–∞'
				questionText='–•–æ—Ç—å –∑–æ–≤—É—Ç –º–µ–Ω—è —Ä—É—á–Ω–∞—è,
				–ù–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä –∫–æ–ª–∫–∏–π.
				–ë—É–¥–µ—Ç –ø–æ–º–Ω–∏—Ç—å –Ω–∞–≤—Å–µ–≥–¥–∞,
				–í—Ä–∞–≥ –º–æ–∏ –æ—Å–∫–æ–ª–∫–∏. '
			/>
		</>
	)
}
export function FourNineMay() {
	return (
		<>
			<ReturnToTheNineMay></ReturnToTheNineMay>
			<Quest
				questId={4}
				correctAnswer='–∫–∞—Ç—é—à–∞'
				questionText='–ò –≤—Ä–∞–≥–∞ –æ–≥–Ω–µ–º –∫–æ—Å–∏–ª–∞,
				–í—Ä–∞–∂—å–∏ –∑–∞–º—ã—Å–ª—ã –ø–æ—Ä—É—à–∞,
				–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞—è ....'
			/>
		</>
	)
}
export function FiveNineMay() {
	return (
		<>
			<ReturnToTheNineMay></ReturnToTheNineMay>
			<Quest
				questId={5}
				correctAnswer='—Ç–µ–ª—å–Ω—è—à–∫–∞'
				questionText='–ó–∞–¥–∞—é —è –≤–∞–º –≤–æ–ø—Ä–æ—Å.
–ß—Ç–æ –∂–µ –Ω–æ—Å–∏—Ç –Ω–∞—à –º–∞—Ç—Ä–æ—Å?
–ü–æ–ª–æ—Å–∞—Ç–∞—è —Ä—É–±–∞—à–∫–∞
–ù–∞–∑—ã–≤–∞–µ—Ç—Å—è ....'
			/>
		</>
	)
}
export function SixNineMay() {
	return (
		<>
			<ReturnToTheNineMay></ReturnToTheNineMay>
			<Quest
				questId={6}
				correctAnswer='–¥–µ–Ω—å –ø–æ–±–µ–¥—ã'
				questionText='–î–µ–Ω—å, –∫–æ–≥–¥–∞ –≥–æ—Ä–∏—Ç –∑–≤–µ–∑–¥–∞
				–ù–∞ —Ñ—É—Ä–∞–∂–∫–µ –¥–µ–¥–∞,
				–ò –¥—Ä–æ–∂–∏—Ç –≤ –≥–ª–∞–∑–∞—Ö —Å–ª–µ–∑–∞ -'
			/>
		</>
	)
}
export function SevenNineMay() {
	return (
		<>
			<ReturnToTheNineMay></ReturnToTheNineMay>
			<Quest
				questId={7}
				correctAnswer='—Å–∞–ª—é—Ç'
				questionText='–í—Å–µ –≤–µ—Å–µ–ª—è—Ç—Å—è: —Ä–µ–±—è—Ç–∞ –∏ –≤–∑—Ä–æ—Å–ª—ã–µ
–ü–µ—Å–Ω–∏ –ø–æ–±–µ–¥–Ω—ã–µ –∑–≤–æ–Ω–∫–æ –ø–æ—é—Ç,
–í –Ω–µ–±–µ –Ω–æ—á–Ω–æ–º —Ä–∞—Å—Å—ã–ø–∞–µ—Ç—Å—è –∑–≤–µ–∑–¥–∞–º–∏
–ü—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π, –≤—Å–µ–º–∏ –ª—é–±–∏–º—ã–π ‚Ä¶'
			/>
		</>
	)
}
export function EightNineMay() {
	return (
		<>
			<ReturnToTheNineMay></ReturnToTheNineMay>
			<Quest
				questId={8}
				correctAnswer='–º–∞–π'
				questionText='–í —ç—Ç–æ–º –º–µ—Å—è—Ü–µ –±—ã–≤–∞–µ—Ç
–°–≤–µ—Ç–ª—ã–π –ø—Ä–∞–∑–¥–Ω–∏–∫, –î–µ–Ω—å –ü–æ–±–µ–¥—ã!
–ú—ã —Å —Å–µ—Å—Ç—Ä–µ–Ω–∫–æ–π –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º
–ù–∞—à–∏—Ö –±–∞–±—É—à–∫—É –∏ –¥–µ–¥–∞!'
			/>
		</>
	)
}
export function NineNineMay() {
	return (
		<>
			<ReturnToTheNineMay></ReturnToTheNineMay>
			<Quest
				questId={9}
				correctAnswer='–ø–æ–±–µ–∂–¥–∞—Ç—å'
				questionText='–ú–æ—Ä—è–∫–∏ –Ω–µ –ª—é–±—è—Ç —Ä–∞—Å—Å—É–∂–¥–∞—Ç—å,
–ú–æ—Ä—è–∫–∏ –ø—Ä–∏–≤—ã–∫–ª–∏'
			/>
		</>
	)
}

function LastQuestion() {
	return (
		<>
			<p style={containerStyle}>
				–ù–∞–π–¥–∏ –≤—Å–µ —Ç–∞–Ω–∫–∏ –Ω–∞ —Å–∞–π—Ç–µ, –æ–Ω–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –≥–¥–µ —É–≥–æ–¥–Ω–æ! P.S. –ò—Ö –Ω–µ—Ç –≤
				python-kids. –û—Å—Ç–∞–ª–æ—Å—å –≤—Å–µ–≥–æ 1 –∑–∞–¥–∞–Ω–∏–µ!
			</p>
		</>
	)
}

export default LastQuestion

export function HowManyTanksIHave() {
	const [count, setCount] = React.useState(0)

	React.useEffect(() => {
		// –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è localStorage
		const tanks = JSON.parse(localStorage.getItem('collectedTanks')) || []
		setCount(tanks.length)

		// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ localStorage
		const handleStorageChange = () => {
			const updatedTanks =
				JSON.parse(localStorage.getItem('collectedTanks')) || []
			setCount(updatedTanks.length)
		}

		window.addEventListener('storage', handleStorageChange)

		return () => {
			window.removeEventListener('storage', handleStorageChange)
		}
	}, [])

	return (
		<div className='tank-counter'>
			{count === 10 ? (
				<div className='complete-message'>
					<h1 style={{ color: 'black' }}>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üéâ</h1>
					<p>–í—ã —Å–æ–±—Ä–∞–ª–∏ –≤—Å–µ 10 —Ç–∞–Ω–∫–æ–≤!</p>
				</div>
			) : (
				<div className='progress-message'>
					<h2 style={{ color: 'black' }}>–ö–æ–ª–ª–µ–∫—Ü–∏—è —Ç–∞–Ω–∫–æ–≤</h2>
					<div className='progress-bar'>
						<div
							className='progress-fill'
							style={{ width: `${count * 10}%` }}
						/>
					</div>
					<p>{count} –∏–∑ 10 —Ç–∞–Ω–∫–æ–≤ —Å–æ–±—Ä–∞–Ω–æ</p>
				</div>
			)}
		</div>
	)
}

export function HowManyExercisesIHave() {
	const [count, setCount] = React.useState(0)
	const [collectedTanks, setCollectedTanks] = React.useState(0)
	const [totalExercises, setTotalExercises] = React.useState(10) // –¢–µ–ø–µ—Ä—å 10 –∑–∞–¥–∞–Ω–∏–π

	React.useEffect(() => {
		// –ü–æ–ª—É—á–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è –∏–∑ localStorage
		const exercises = JSON.parse(localStorage.getItem('correctAnswers')) || []

		// –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö —Ç–∞–Ω–∫–æ–≤
		const tanks = JSON.parse(localStorage.getItem('collectedTanks')) || []
		setCollectedTanks(tanks.length)

		// –ï—Å–ª–∏ –≤—Å–µ —Ç–∞–Ω–∫–∏ —Å–æ–±—Ä–∞–Ω—ã, —Å—á–∏—Ç–∞–µ–º 10 –∑–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–º
		const completedCount = exercises.length + (tanks.length === 10 ? 1 : 0)
		setCount(completedCount)

		// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ localStorage
		const handleStorageChange = () => {
			const updatedExercises =
				JSON.parse(localStorage.getItem('correctAnswers')) || []
			const updatedTanks =
				JSON.parse(localStorage.getItem('collectedTanks')) || []
			setCollectedTanks(updatedTanks.length)
			setCount(updatedExercises.length + (updatedTanks.length === 10 ? 1 : 0))
		}

		window.addEventListener('storage', handleStorageChange)
		return () => window.removeEventListener('storage', handleStorageChange)
	}, [])

	return (
		<div className='exercise-counter'>
			{count === totalExercises ? (
				<div className='complete-message'>
					<h1 style={{ color: 'black' }}>–û—Ç–ª–∏—á–Ω–æ! üéñÔ∏è</h1>
					<p>–í—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –≤—Å–µ {totalExercises} –∑–∞–¥–∞–Ω–∏–π!</p>
				</div>
			) : (
				<div className='progress-message'>
					<h2 style={{ color: 'black' }}>–ü—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–¥–∞–Ω–∏–π</h2>
					<div className='progress-bar'>
						<div
							className='progress-fill'
							style={{ width: `${(count / totalExercises) * 100}%` }}
						/>
					</div>
					<p>
						{count} –∏–∑ {totalExercises} –∑–∞–¥–∞–Ω–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
						{collectedTanks === 10 && ' (–≤–∫–ª—é—á–∞—è —Å–±–æ—Ä –≤—Å–µ—Ö —Ç–∞–Ω–∫–æ–≤)'}
					</p>
				</div>
			)}
		</div>
	)
}
